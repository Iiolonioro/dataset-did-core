commit e86692281134206d44fcb2e6ed685bc042f62462
tree 6a950194133141494cfa5e0b277f7b407dcf65ee
parent e2260ae9c9f9bfd787140ea3d2e7184c9e3a20cf
author Manu Sporny <msporny@digitalbazaar.com> 1506434864 -0400
committer Manu Sporny <msporny@digitalbazaar.com> 1509881234 -0500

    Update authorization and capability fields to new terms.

diff --git a/index.html b/index.html
index ac140e7..23402df 100644
--- a/index.html
+++ b/index.html
@@ -96,14 +96,14 @@ Decentralized Identifiers (DIDs) are a new type of identifier intended
 for verifiable digital identity that is "self-sovereign", i.e., fully
 under the control of the entity and not dependent on a
 centralized registry, identity provider, or certificate authority. DIDs
-resolve to DID Descriptions — simple JSON documents that
+resolve to DID Descriptions — simple documents that
 contain all the metadata needed to interact with the DID.
 Specifically, a DID Description contains at least three things. The first is
 a set of mechanisms that may be used to authenticate as
 as a particular DID (e.g. public keys, pseudonymous biometric templates, etc.).
 The second is a set of authorization information that outlines which entities
-may modify the DID Description. The third is a set of service endpoints, which may
-be used to initiate trusted interactions with the entity. Each DID
+may modify the DID Description. The third is a set of service endpoints, which
+may be used to initiate trusted interactions with the entity. Each DID
 uses a specific DID method, defined in a separate DID method specification, to
 define how the DID is registered, resolved, updated, and revoked on a
 specific distributed ledger or network.
@@ -171,12 +171,12 @@ share a common root of trust in the form of a globally distributed ledger
 
 <p>
 The entities are identified by decentralized identifiers (DIDs). They may
-authenticate via keys (or other mechanisms, such as privacy-preserving 
-biometrics). DIDs point to DID Descriptions.
-A DID Description also contain a set of service endpoints for
+authenticate via proofs (e.g. digital signatures, privacy-preserving
+biometrics, etc.). DIDs point to DID Descriptions.
+A DID Description contains a set of service endpoints for
 interacting with the entity. Following the dictums of <a href=
   "https://en.wikipedia.org/wiki/Privacy_by_design">Privacy by Design</a>
-  , each entity may have as many DID records as necessary, to
+  , each entity may have as many DIDs as necessary, to
 respect the entity’s desired separation of identities, personas,
 and contexts.
 </p>
@@ -450,7 +450,7 @@ architecture.
       </td>
       <td colspan="1" rowspan="1">
         <p>
-          DID architecture should provide sufficient security for relying
+          DID architecture should enable sufficient security for relying
           parties to rely on DID records to their required level of
           assurance.
         </p>
@@ -608,10 +608,10 @@ property below is just for illustration).
 {
   "@context": "https://example.com/did/v1",
   "id": "did:example:123456789abcdefghi",
-  "authorization": [{
+  "authorizationCapability": [{
     // this entity may update any field in this DID Description using any
     // authentication mechanism understood by the ledger
-    "capability": "UpdateDidDescription",
+    "permission": "UpdateDidDocument",
     "entity": "did:example:123456789abcdefghi"
   }],
   "credentialRepositoryService": "https://vc.example.com/abcdef",
@@ -644,11 +644,11 @@ private keys.
 {
   "@context": "https://example.com/did/v1",
   "id": "did:example:123456789abcdefghi",
-  "authorization": [{
+  "authorizationCapability": [{
     // this entity is a guardian and may update any field in this
     // DID Description using any authentication mechanism understood
     // by the ledger
-    "capability": "UpdateDidDescription",
+    "permission": "UpdateDidDocument",
     "entity": "did:example:zxyvwtrkpn987654321"
   }],
   "credentialRepositoryService": "https://vc.example.com/abcdef",
@@ -1274,11 +1274,11 @@ Example:
 {
   "@context": "https://example.com/did/v1",
   "id": "did:example:123456789abcdefghi",
-  "authorization": [{
+  "authorizationCapability": [{
     // this entity is a guardian and may update any field in this
     // DID Description using any authentication mechanism understood
     // by the ledger
-    "capability": "UpdateDidDescription",
+    "permission": "UpdateDidDocument",
     "entity": "did:example:zxyvwtrkpn987654321"
   }],
   "credentialRepositoryService": "https://vc.example.com/abcdef",
@@ -1439,15 +1439,15 @@ property array MAY contain multiple JSON objects:
 {
   "@context": "https://example.com/did/v1",
   "id": "did:example:215cb1dc-1f44-4695-a07f-97649cad9938",
-  "authorization": [{
+  "authorizationCapability": [{
     // this entity may update any field in this DID Description using any
     // authentication mechanism understood by the ledger
-    "capability": "UpdateDidDescription",
+    "permission": "UpdateDidDocument",
     "entity": "did:example:z9f823hdf783h78fh2378"
   }, {
     // this entity may update the authenticationCredential field in this
     // DID Description as long as they authenticate with RsaSignature2017
-    "capability": "UpdateDidDescription",
+    "permission": "UpdateDidDocument",
     "entity": "did:example:abvd73h285jf73hd73",
     "field": ["authenticationCredential"],
     "permittedProofType": [{
@@ -1476,10 +1476,10 @@ property array MAY contain a single JSON object
 {
   "@context": "https://example.com/did/v1",
   "id": "did:example:215cb1dc-1f44-4695-a07f-97649cad9938",
-  "authorization": [{
+  "authorizationCapability": [{
     // anyone may update the authenticationCredential and writeAuthorization
     // fields as long as they provide a specific multi-signature proof
-    "capability": "UpdateDidDescription",
+    "permission": "UpdateDidDocument",
     "field": ["authenticationCredential", "writeAuthorization"],
     "permittedProofType": [{
       "proofType": "RsaSignature2017",
@@ -2706,16 +2706,16 @@ https://github.com/WebOfTrustInfo/rebooting-the-web-of-trust-fall2016/blob/maste
 {
   "@context": "https://w3id.org/veres-one/v1",
   "id": "did:example:123456789abcdefghi",
-  "authorization": [{
+  "authorizationCapability": [{
     // this entity may update any field in this DID Description using any
     // authentication mechanism understood by the ledger
-    "capability": "UpdateDidDescription",
+    "permission": "UpdateDidDocument",
     "entity": "did:v1:215cb1dc-1f44-4695-a07f-97649cad9938"
   }, {
     // this entity may update the authenticationCredential field in this
     // DID Description as long as they authenticate with RsaSignature2017
     "entity": "did:v1:b5f8c320-f7ca-4869-85e6-a1bcbf825b2a",
-    "capability": "UpdateDidDescription",
+    "permission": "UpdateDidDocument",
     "field": ["authenticationCredential"],
     "permittedProofType": [{
       "proofType": "RsaSignature2017"
@@ -2723,7 +2723,7 @@ https://github.com/WebOfTrustInfo/rebooting-the-web-of-trust-fall2016/blob/maste
   }, {
     // anyone may update the authenticationCredential and writeAuthorization
     // fields as long as they provide a specific multi-signature proof
-    "capability": "UpdateDidDescription",
+    "permission": "UpdateDidDocument",
     "field": ["authenticationCredential", "writeAuthorization"],
     "permittedProofType": [{
       "proofType": "RsaSignature2017",
@@ -2748,7 +2748,7 @@ https://github.com/WebOfTrustInfo/rebooting-the-web-of-trust-fall2016/blob/maste
   }, {
     // this entity may issue credentials where the "issuer" field is this
     // DID Description's DID as long as this specific RSA key is used
-    "capability": "IssueCredential",
+    "permission": "IssueCredential",
     "entity": "did:example:123456789abcdefghi",
     "permittedProofType": [{
       "proofType": "RsaSignature2017",
